{"version":3,"sources":["C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/actions/users.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/index.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/users-list/users-list.html","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/users-list/users-list.scss","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/users-list/users-list.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/containers/users-page.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/effects/users.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/reducers/index.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/reducers/users.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/users-routing.module.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/users.module.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/users.service.ts"],"names":[],"mappings":"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","file":"users.module.chunk.js","sourcesContent":["import { Action } from '@ngrx/store';\r\nimport {UsersListItem} from '../models/users-list-item.model'\r\nimport { UsersListPagingModel } from '../models/users-list-paging.model';\nimport { UsersList } from \"../models/user-list.model\";\r\n\r\nexport const GET = '[Users] Get users';\r\nexport const GET_COMPLETE = '[Users] Get Complete';\r\nexport const ADD = '[Users] Add user';\r\nexport const ADD_COMPLETE = '[Users] Add User Complete';\r\n\r\nexport class GetAction implements Action {\r\n    type = GET;\r\n    constructor(public payload: UsersListPagingModel) { }\r\n}\r\n\r\nexport class GetCompleteAction implements Action {\r\n    type = GET_COMPLETE;\r\n\r\n    constructor(public payload: UsersList) { }\r\n}\r\n\r\nexport class SaveAction implements Action {\r\n    type = ADD;\r\n\r\n    constructor(public payload: UsersListItem) { }\r\n}\r\n\r\nexport class SaveCompleteAction implements Action {\r\n    type = ADD_COMPLETE;\r\n\r\n    constructor(public payload: UsersListItem) { }\r\n}\r\n\r\nexport type Actions = GetAction\r\n    | GetCompleteAction\r\n    | SaveAction\r\n    | SaveCompleteAction;\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/actions/users.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { UsersListComponent } from './users-list/users-list';\r\n\r\n\r\n\r\nexport const COMPONENTS = [\r\n    UsersListComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [\n        PaginationModule.forRoot(),\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        RouterModule\r\n    ],\r\n    declarations: COMPONENTS,\r\n    exports: COMPONENTS,\r\n})\r\nexport class ComponentsModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/index.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        EMPLOYEES\\r\\n      </div>\\r\\n      <div class=\\\"card-block\\\" *ngIf=\\\"isLoaded\\\">\\n        <div class=\\\"form-group\\\">\\r\\n          <table class=\\\"table table-hover table-outline mb-0 hidden-sm-down\\\" *ngIf=\\\"isLoaded\\\">\\r\\n            <thead class=\\\"thead-default\\\">\\r\\n              <tr>\\r\\n                <td class=\\\"text-center\\\">Employee Id <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('id')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">First Name <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('FirstName')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Last Name <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('LastName')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Email <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('EmailAddress')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Phone <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('PhoneNumber')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Last 4 SS <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('SocialSecurityNumber')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Is Admin? <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('IsAdmin')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Is Active? <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('IsActive')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">Calculate Overtime? <a class=\\\"fa fa-sort\\\" (click)=\\\"order.emit('IsOvertimeCalculated')\\\"></a></td>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let user of users\\\">\\r\\n                <td class=\\\"text-center\\\">{{user.Id}}</td>\\r\\n                <td class=\\\"text-center\\\">{{user.FirstName}}</td>\\r\\n                <td class=\\\"text-center\\\">{{user.LastName}}</td>\\r\\n                <td class=\\\"text-center\\\">{{user.Email}}</td>\\r\\n                <td class=\\\"text-center\\\">{{user.Phone}}</td>\\r\\n                <td class=\\\"text-center\\\">{{user.Last4Ss}}</td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"user.IsAdmin\\\"><span class=\\\"badge badge-success timego-status\\\">{{user.IsAdmin ? 'Yes' : 'No'}}</span></td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"!user.IsAdmin\\\"><span class=\\\"badge badge-danger timego-status\\\">{{user.IsAdmin ? 'Yes' : 'No'}}</span></td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"user.IsActive\\\"><span class=\\\"badge badge-success timego-status\\\">{{user.IsActive ? 'Yes' : 'No'}}</span></td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"!user.IsActive\\\"><span class=\\\"badge badge-danger timego-status\\\">{{user.IsActive ? 'Yes' : 'No'}}</span></td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"user.IsOvertimeCalculated\\\"><span class=\\\"badge badge-success timego-status\\\">{{user.IsOvertimeCalculated ? 'Yes' : 'No'}}</span></td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"!user.IsOvertimeCalculated\\\"><span class=\\\"badge badge-danger timego-status\\\">{{user.IsOvertimeCalculated ? 'Yes' : 'No'}}</span></td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <pagination [totalItems]=\\\"pagingModel.count\\\" [(ngModel)]=\\\"pagingModel.page\\\" (pageChanged)=\\\"changePage.emit({\\r\\n            orderBy: pagingModel.orderBy,\\r\\n            page: $event.page,\\r\\n            pageSize: pagingModel.pageSize,\\r\\n            IsAscending: pagingModel.IsAscending,\\r\\n            count: pagingModel.count,\\n            IsOrder: false})\\\"></pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/users-list/users-list.html\n// module id = ../../../../../src/app/users/components/users-list/users-list.html\n// module chunks = users.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/users-list/users-list.scss\n// module id = ../../../../../src/app/users/components/users-list/users-list.scss\n// module chunks = users.module","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UsersListItem } from '../../models/users-list-item.model';\r\nimport { UsersListPagingModel } from '../../models/users-list-paging.model';\n\r\n@Component({\r\n    selector: 'up-users-list',\r\n    templateUrl: './users-list.html',\r\n    styleUrls: ['./users-list.scss']\r\n\r\n})\r\nexport class UsersListComponent {\r\n    @Input() users: UsersListItem[];\r\n    @Input() isLoaded: boolean = false;\r\n    @Input() loading: boolean = false;\n    @Input() pagingModel: UsersListPagingModel;\r\n    @Output() order = new EventEmitter<string>();\n    @Output() changePage = new EventEmitter<UsersListPagingModel>();\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/components/users-list/users-list.ts","import 'rxjs/add/operator/take';\r\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport * as fromUsers from '../reducers';\r\nimport * as usersActions from '../actions/users';\r\n\r\nimport {UsersListPagingModel} from '../models/users-list-paging.model';\r\nimport {UsersListItem} from '../models/users-list-item.model';\r\n\r\n@Component({\r\n    selector: 'users-page',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n    <up-users-list [users]=\"users$ | async\" [pagingModel]=\"pagingModel$ | async\" [isLoaded]=\"isLoaded$ | async\" [loading]=\"loading$ | async\" (order)=\"orderUser($event)\" (changePage)=\"changePage($event)\"></up-users-list>\r\n  `,\r\n})\r\nexport class UsersPageComponent {\r\n    users$: Observable<UsersListItem[]>;\r\n    isLoaded$: Observable<boolean>;\r\n    loading$: Observable<boolean>;\r\n    pagingModel$: Observable<UsersListPagingModel>;\r\n\r\n    constructor(private store: Store<fromUsers.State>) {\r\n        this.users$ = store.select(fromUsers.getUsersList);\r\n        this.isLoaded$ = store.select(fromUsers.getIsLoadedStatus);\r\n        this.loading$ = store.select(fromUsers.getLoadingStatus);\r\n        this.pagingModel$ = store.select(fromUsers.getPagingModel);\r\n    }\r\n\r\n    ngOnInit() {\r\n        let pagingModelView: UsersListPagingModel = {\r\n            orderBy: \"id\",\r\n            page: 1,\r\n            pageSize: 10,\r\n            IsAscending: true,\r\n            count: 1,\n            IsOrder: true\r\n        }\r\n        this.store.dispatch(new usersActions.GetAction(pagingModelView));\r\n    }\r\n    \r\n    orderUser(orderBy: string) {\r\n        let pagingModelView: UsersListPagingModel = {\r\n            orderBy: orderBy,\r\n            page: 1,\r\n            pageSize: 10,\r\n            IsAscending: true,\r\n            count: 1,\n            IsOrder: true\r\n        }\r\n        this.store.dispatch(new usersActions.GetAction(pagingModelView));\r\n    }\r\n\r\n    changePage(model: UsersListPagingModel)\r\n    {\r\n        this.store.dispatch(new usersActions.GetAction(model));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/containers/users-page.ts","import 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/skip';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { Injectable, InjectionToken, Optional, Inject } from '@angular/core';\r\nimport { Effect, Actions, toPayload } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { async } from 'rxjs/scheduler/async';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { UsersService } from '../users.service';\r\nimport * as usersActions from '../actions/users';\r\nimport { UsersListItem } from '../models/users-list-item.model';\nimport { UsersList } from '../models/user-list.model';\r\nimport { UsersListPagingModel } from '../models/users-list-paging.model';\r\n\r\n@Injectable()\r\nexport class UsersEffects {\r\n    @Effect()\r\n    get$: Observable<Action> = this.actions$\r\n        .ofType(usersActions.GET)\r\n        .map(toPayload)\r\n        .switchMap((query: UsersListPagingModel) => {\r\n            const nextGet$ = this.actions$.ofType(usersActions.GET).skip(1);\r\n            return this.usersService\r\n                .getUsersList(query)\r\n                .takeUntil(nextGet$)\r\n                .map((users: UsersList) => new usersActions.GetCompleteAction(users))\r\n                .catch(() => of(new usersActions.GetCompleteAction(null)));\r\n        });\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private usersService: UsersService\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/effects/users.ts","import {\r\nActionReducerMap,\r\ncreateSelector,\r\ncreateFeatureSelector,\r\ncompose,\r\nActionReducer,\r\ncombineReducers,\r\nAction,\r\nActionReducerFactory,\r\nMemoizedSelector,\r\n} from '@ngrx/store';\r\n\r\nimport * as fromUsers from './users';\r\n\r\nexport interface UsersState {\r\n    usersPage: fromUsers.State;\r\n}\r\n\r\nexport interface State extends fromUsers.State {\r\n    'usersPage': UsersState;\r\n}\r\n\r\nexport const reducers = {\r\n    usersPage: fromUsers.reducer\r\n};\r\n\r\nexport const getUsersState = createFeatureSelector<UsersState>('usersPage');\r\nexport const getUsersEntityState = createSelector(\r\n    getUsersState,\r\n    (state: UsersState) => state.usersPage\r\n);\r\nexport const getUsersList = createSelector(\r\n    getUsersEntityState,\r\n    fromUsers.getUsers\r\n);\r\nexport const getLoadingStatus = createSelector(\r\n    getUsersEntityState,\r\n    fromUsers.getLoadingStatus\r\n);\r\nexport const getIsLoadedStatus = createSelector(\r\n    getUsersEntityState,\r\n    fromUsers.getIsLoadedStatus\r\n);\r\nexport const getPagingModel = createSelector(\r\n    getUsersEntityState,\r\n    fromUsers.getPagingModel\r\n);\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/reducers/index.ts","import { createSelector } from '@ngrx/store';\r\nimport {UsersListItem} from '../models/users-list-item.model'\r\nimport * as usersActions from '../actions/users';\r\nimport { UsersListPagingModel } from \"../models/users-list-paging.model\";\r\nimport { UsersList } from \"../models/user-list.model\";\r\n\r\nexport interface State {\r\n    users: UsersListItem[];\r\n    isLoaded: boolean;\r\n    loading: boolean;\r\n    pagingModel: UsersListPagingModel;\r\n}\r\n\r\nexport const initialState: State = {\r\n    users: [],\r\n    isLoaded: false,\r\n    loading: false,\r\n    pagingModel: {\r\n        orderBy: \"id\",\r\n        page: 1,\r\n        pageSize: 10,\r\n        IsAscending: true,\r\n        count: 1,\r\n        IsOrder: true\r\n    }\r\n};\r\n\r\nexport function reducer(\r\n    state = initialState,\r\n    action: usersActions.Actions\r\n): State {\r\n    switch (action.type) {\r\n        case usersActions.GET:\r\n            const pagingModel = action.payload as UsersListPagingModel;\r\n            pagingModel.IsAscending = !pagingModel.IsOrder ? state.pagingModel.IsAscending : pagingModel != null ? pagingModel.orderBy != state.pagingModel.orderBy || !state.pagingModel.IsAscending : true;\r\n            {\r\n                return {\r\n                    users: state.users,\r\n                    isLoaded: true,\r\n                    loading: true,\r\n                    pagingModel: pagingModel,\r\n                };\r\n            }\r\n\r\n        case usersActions.GET_COMPLETE: {\r\n            const loadedUsers = action.payload as UsersList;\r\n            return {\r\n                users: loadedUsers.Results,\r\n                isLoaded: true,\r\n                loading: false,\r\n                pagingModel: {\r\n                    IsAscending: state.pagingModel.IsAscending,\r\n                    count: loadedUsers.Count,\r\n                    orderBy: state.pagingModel.orderBy,\r\n                    page: state.pagingModel.page,\r\n                    pageSize: state.pagingModel.pageSize,\r\n                    IsOrder: true\r\n                }\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUsers = (state: State) => state.users;\r\nexport const getLoadingStatus = (state: State) => state.loading;\r\nexport const getIsLoadedStatus = (state: State) => state.isLoaded;\r\nexport const getPagingModel = (state: State) => state.pagingModel;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/reducers/users.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AlwaysAuthGuard } from '../AlwaysAuthGuard' \r\nimport { TaskManagerAuthGuard } from '../TaskManagerAuthGuard' \r\n\r\nimport { UsersPageComponent} from './containers/users-page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UsersPageComponent,\r\n        canActivate: [AlwaysAuthGuard, TaskManagerAuthGuard],\r\n        data: {\r\n            title: 'Users'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/users-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule} from '@angular/http';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport {UsersService} from './users.service';\r\nimport { UsersPageComponent} from './containers/users-page';\r\nimport {UsersEffects} from './effects/users';\r\nimport {ComponentsModule} from './components/index'\r\nimport { reducers } from './reducers';\r\n\r\n@NgModule({\r\n    imports: [\r\n        HttpModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        UsersRoutingModule,\r\n        ComponentsModule,\r\n        StoreModule.forFeature('usersPage', reducers),\r\n        EffectsModule.forFeature([UsersEffects])\r\n    ],\r\n    declarations: [\r\n        UsersPageComponent\r\n    ],\r\n    providers: [UsersService]\r\n})\r\nexport class UsersModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/users.module.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UsersListPagingModel } from './models/users-list-paging.model'\r\nimport { UsersListItem } from './models/users-list-item.model'\r\nimport { UsersList } from './models/user-list.model'\r\nimport { RequestService } from '../services/RequestService'\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n    constructor(private requestService: RequestService) { }\r\n\r\n    getUsersList(pagingModel: UsersListPagingModel): Observable<UsersList> {\r\n        return this.requestService.post<UsersList>(\"/api/GetUsers/\", pagingModel);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/users/users.service.ts"],"sourceRoot":"webpack:///"}