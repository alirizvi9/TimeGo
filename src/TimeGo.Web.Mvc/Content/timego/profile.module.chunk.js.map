{"version":3,"sources":["C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/common/constants.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/actions/profile-edit.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/index.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/profile-edit/profile-edit.html","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/profile-edit/profile-edit.scss","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/profile-edit/profile-edit.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/containers/profile-page.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/effects/profile-edit.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/profile-routing.module.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/profile.module.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/profile.service.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/reducers/index.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/reducers/profile-edit.ts"],"names":[],"mappings":"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","file":"profile.module.chunk.js","sourcesContent":["export class AppConstants {\r\n    public static weekDays: Array<any> = [\r\n        { text: 'Sunday', id: 7 },\r\n        { text: 'Monday', id: 1 },\r\n        { text: 'Tuesday', id: 2 },\r\n        { text: 'Wednesday', id: 3 },\r\n        { text: 'Thursday', id: 4 },\r\n        { text: 'Friday', id: 5 },\r\n        { text: 'Saturday', id: 6 }];\r\n\r\n    public static timesheets: Array<any> = [\r\n        { text: '1', id: 1 },\r\n        { text: '2', id: 2 },\r\n        { text: '3', id: 3 },\r\n        { text: '4', id: 4 }];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/common/constants.ts","import { Action } from '@ngrx/store';\r\nimport {CompanyProfile} from '../models/company-profile.model';\r\n\r\nexport const GET = '[Profile Edit] Get';\r\nexport const GET_COMPLETE = '[Profile Edit] Get Complete';\r\nexport const SAVE = '[Profile Edit] Save';\r\nexport const SAVE_COMPLETE = '[Profile Edit] Save Complete';\r\n\r\nexport class GetAction implements Action {\r\n    type = GET;\r\n    constructor(public payload: any = null) { }\r\n}\r\n\r\nexport class GetCompleteAction implements Action {\r\n    type = GET_COMPLETE;\r\n\r\n    constructor(public payload: CompanyProfile) { }\r\n}\r\n\r\nexport class SaveAction implements Action {\r\n    type = SAVE;\r\n\r\n    constructor(public payload: CompanyProfile) { }\r\n}\r\n\r\nexport class SaveCompleteAction implements Action {\r\n    type = SAVE_COMPLETE;\r\n\r\n    constructor(public payload: any = null) { }\r\n}\r\n\r\nexport type Actions = GetAction\r\n    | GetCompleteAction\r\n    | SaveAction\r\n    | SaveCompleteAction;\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/actions/profile-edit.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ProfileEditComponent } from './profile-edit/profile-edit';\r\n\r\n\r\n\r\nexport const COMPONENTS = [\r\n    ProfileEditComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule, \r\n        FormsModule,\r\n        RouterModule\r\n    ],\r\n    declarations: COMPONENTS,\r\n    exports: COMPONENTS,\r\n})\r\nexport class ComponentsModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/index.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8 push-md-2\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        MY PROFILE\\r\\n      </div>\\r\\n      <div class=\\\"card-block\\\" *ngIf=\\\"isLoaded\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"company-name\\\">Company Name</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"icon-organization\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"company-name\\\" placeholder=\\\"Company name\\\" [(ngModel)]=\\\"company.CompanyName\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"contact-name\\\">Contact Name</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"icon-user\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact-name\\\" placeholder=\\\"Contact name\\\" [(ngModel)]=\\\"company.ContactName\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"phone-number\\\">Phone Number</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"icon-phone\\\"></i>\\r\\n                </span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone-number\\\" placeholder=\\\"Phone number\\\" [(ngModel)]=\\\"company.PhoneNumber\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"email\\\">Email</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"\\\">@</i>\\r\\n                </span>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"company.EmailAddress\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"vacation-approver-email\\\">Vacation Approver Email</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"\\\">@</i>\\r\\n                </span>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"vacation-approver-email\\\" placeholder=\\\"Vacation Approver Email\\\" [(ngModel)]=\\\"company.VacationApproverEmail\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"week-day\\\">Work Week Start Day</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"icon-calendar\\\"></i>\\r\\n                </span>\\r\\n                <select id=\\\"week-day\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company.WorkWeekStartDay\\\">\\r\\n                  <option *ngFor=\\\"let c of weekDays\\\" [ngValue]=\\\"c.id\\\">{{c.text}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"timesheets\\\">Timesheets Weeks in advance</label>\\r\\n              <div class=\\\"input-group mb-3 required\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"icon-globe\\\"></i>\\r\\n                </span>\\r\\n                <select id=\\\"timesheets\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company.TimesheetsWeeks\\\">\\r\\n                  <option *ngFor=\\\"let c of timesheets\\\" [ngValue]=\\\"c.id\\\">{{c.text}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"companyUrl\\\">Company Url</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyUrl\\\" [(ngModel)]=\\\"company.TimeGoUrl\\\">\\r\\n                <span class=\\\"input-group-addon\\\">\\r\\n                  <i class=\\\"\\\">.timego.com/</i>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\n        <div class=\\\"form-group float-right\\\">\\r\\n          <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Save\\\" (click)=\\\"save.emit(company)\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/profile-edit/profile-edit.html\n// module id = ../../../../../src/app/profile/components/profile-edit/profile-edit.html\n// module chunks = profile.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/profile-edit/profile-edit.scss\n// module id = ../../../../../src/app/profile/components/profile-edit/profile-edit.scss\n// module chunks = profile.module","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CompanyProfile } from '../../models/company-profile.model';\r\nimport {AppConstants} from '../../../common/constants'\r\n\r\n@Component({\r\n    selector: 'pc-profile-edit',\r\n    templateUrl: './profile-edit.html',\r\n    styleUrls: ['./profile-edit.scss']\r\n    \r\n})\r\nexport class ProfileEditComponent {\r\n    @Input() company: CompanyProfile;\r\n    @Input() isLoaded: boolean = false;\r\n    @Output() save = new EventEmitter<CompanyProfile>();\r\n\r\n    weekDays = AppConstants.weekDays;\r\n    timesheets = AppConstants.timesheets;\r\n   }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/components/profile-edit/profile-edit.ts","import 'rxjs/add/operator/take';\r\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport * as fromProfile from '../reducers';\r\nimport * as profileEdit from '../actions/profile-edit';\r\n\r\nimport {CompanyProfile} from '../models/company-profile.model'\r\n\r\n@Component({\r\n    selector: 'profile-page',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n    <pc-profile-edit [company]=\"company$ | async\" [isLoaded]=\"isLoaded$ | async\" (save)=\"saveProfile($event)\"></pc-profile-edit>\r\n  `,\r\n})\r\nexport class ProfileEditPageComponent {\r\n    company$: Observable<CompanyProfile>;\r\n    isLoaded$: Observable<boolean>;\r\n\r\n    constructor(private store: Store<fromProfile.State>) {\r\n        this.company$ = store.select(fromProfile.getCompanyEntity);\r\n        this.isLoaded$ = store.select(fromProfile.getLoadingStatus);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.store.dispatch(new profileEdit.GetAction({}));\r\n    }\r\n\r\n    saveProfile(company: CompanyProfile) {\r\n        this.store.dispatch(new profileEdit.SaveAction(company));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/containers/profile-page.ts","import 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/skip';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { Injectable, InjectionToken, Optional, Inject } from '@angular/core';\r\nimport { Effect, Actions, toPayload } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { async } from 'rxjs/scheduler/async';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { ProfileService } from '../profile.service';\r\nimport * as profileEdit from '../actions/profile-edit';\r\nimport { CompanyProfile } from '../models/company-profile.model';\r\n\r\n@Injectable()\r\nexport class ProfileEditEffects {\r\n    @Effect()\r\n    get$: Observable<Action> = this.actions$\r\n        .ofType(profileEdit.GET)\r\n        .map(toPayload)\r\n        .switchMap(() => {\r\n            const nextGet$ = this.actions$.ofType(profileEdit.GET).skip(1);\r\n            return this.profileService\r\n                .getCurrentProfile()\r\n                .takeUntil(nextGet$)\r\n                .map((company: CompanyProfile) => new profileEdit.GetCompleteAction(company))\r\n                .catch(() => of(new profileEdit.GetCompleteAction(null)));\r\n        });\r\n\r\n    @Effect()\r\n    save$: Observable<Action> = this.actions$\r\n        .ofType(profileEdit.SAVE)\r\n        .map(toPayload)\r\n        .switchMap((company : CompanyProfile) => {\r\n            if (!company) \r\n                return empty();\r\n            \r\n            return this.profileService\r\n                .editCurrentProfile(company)\r\n                .map((result: any) => new profileEdit.SaveCompleteAction(result))\r\n                .catch(() => of(new profileEdit.SaveCompleteAction(null)));\r\n        });\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private profileService: ProfileService\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/effects/profile-edit.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileEditPageComponent } from './containers/profile-page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProfileEditPageComponent,\r\n        data: {\r\n            title: 'Profile'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/profile-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule} from '@angular/http';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ProfileEditPageComponent} from './containers/profile-page';\r\nimport {ProfileService} from './profile.service';\r\nimport {ProfileEditEffects} from './effects/profile-edit';\r\nimport {ComponentsModule} from './components/index'\r\nimport { reducers } from './reducers';\r\n\r\n@NgModule({\r\n    imports: [\r\n        HttpModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        ProfileRoutingModule,\r\n        ComponentsModule,\r\n        StoreModule.forFeature('profile', reducers),\r\n        EffectsModule.forFeature([ProfileEditEffects])\r\n    ],\r\n    declarations: [\r\n        ProfileEditPageComponent\r\n    ],\r\n    providers: [ProfileService]\r\n})\r\nexport class ProfileModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/profile.module.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { CompanyProfile } from './models/company-profile.model'\nimport { RequestService } from '../services/RequestService'\r\n\r\n@Injectable()\r\nexport class ProfileService {\r\n    constructor(private requestService: RequestService) { }\n\r\n    getProfile(id: number): Observable<CompanyProfile> {\n        return this.requestService.get<CompanyProfile>(\"/api/Profile/\" + id);\r\n    }\r\n\r\n    getCurrentProfile(): Observable<CompanyProfile> {\n        return this.requestService.get<CompanyProfile>(\"/api/Profile/\");\r\n    }\r\n\r\n    editCurrentProfile(model: CompanyProfile): Observable<CompanyProfile> {\n        return this.requestService.post<CompanyProfile>(\"/api/Profile/\", model);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/profile.service.ts","import {\r\nActionReducerMap,\r\ncreateSelector,\r\ncreateFeatureSelector,\r\ncompose,\r\nActionReducer,\r\ncombineReducers,\r\nAction,\r\nActionReducerFactory,\r\nMemoizedSelector,\r\n} from '@ngrx/store';\r\n\r\nimport * as fromProfileEdit from './profile-edit';\r\n\r\nexport interface ProfileState {\r\n    profileEdit: fromProfileEdit.State;\r\n}\r\n\r\nexport interface State extends fromProfileEdit.State {\r\n    'profile': ProfileState;\r\n}\r\n\r\nexport const reducers = {\r\n    profileEdit: fromProfileEdit.reducer\r\n};\r\n\r\nexport const getEditProfileState = createFeatureSelector<ProfileState>('profile');\r\nexport const getEditProfileEntityState = createSelector(\r\n    getEditProfileState,\r\n    (state: ProfileState) => state.profileEdit\r\n);\r\nexport const getCompanyEntity = createSelector(\r\n    getEditProfileEntityState,\r\n    fromProfileEdit.getCompany\r\n);\r\nexport const getLoadingStatus = createSelector(\r\n    getEditProfileEntityState,\r\n    fromProfileEdit.getLoadingStatus\r\n);\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/reducers/index.ts","import { createSelector } from '@ngrx/store';\r\nimport { CompanyProfile } from '../models/company-profile.model';\r\nimport * as editProfile from '../actions/profile-edit';\r\n\r\nexport interface State {\r\n    company: CompanyProfile;\r\n    isLoaded: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n    company: null,\r\n    isLoaded: false\r\n};\r\n\r\nexport function reducer(\r\n    state = initialState,\r\n    action: editProfile.Actions\r\n): State {\r\n    switch (action.type) {\r\n        case editProfile.GET:\r\n            {\r\n                return {\r\n                    company: state.company,\r\n                    isLoaded: false\r\n                };\r\n            }\r\n\r\n        case editProfile.GET_COMPLETE: {\r\n            const loadedCompany = action.payload;\r\n            return {\r\n                company: loadedCompany,\r\n                isLoaded: true\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCompany = (state: State) => state.company;\r\nexport const getLoadingStatus = (state: State) => state.isLoaded;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/profile/reducers/profile-edit.ts"],"sourceRoot":"webpack:///"}