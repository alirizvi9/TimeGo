{"version":3,"sources":["C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/actions/period.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/index.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/period-list/period-list.html","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/period-list/period-list.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/period-list/period.scss","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/containers/period-page.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/effects/period.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/period-routing.module.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/period.module.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/period.service.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/reducers/index.ts","C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/reducers/period.ts"],"names":[],"mappings":"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","file":"period.module.chunk.js","sourcesContent":["import { Action } from '@ngrx/store';\r\nimport { PeriodList } from '../models/period-list.model'\r\nimport { PeriodListPagingModel } from '../models/period-list-paging.model';\r\nimport { AddPeriod } from '../models/add-period.model';\r\nimport { ChangeStatus } from '../models/chagne-status-period.model'\r\nimport { DeletePeriodModel } from '../models/delete.model'\r\n\r\nexport const GET = '[Period] Get periods';\r\nexport const GET_COMPLETE = '[Period] Get Complete';\r\nexport const ADD = '[Period] Add period';\r\nexport const ADD_COMPLETE = '[Period] Add period Complete';\r\nexport const CHANGE_STATUS = '[Period] Change status';\r\nexport const CHANGE_STATUS_COMPLETE = '[Period] Change status Complete';\r\nexport const DELETE = '[Period] Delete period';\r\n\r\nexport class GetAction implements Action {\r\n    type = GET;\r\n    constructor(public payload: PeriodListPagingModel) { }\r\n}\r\n\r\nexport class GetCompleteAction implements Action {\r\n    type = GET_COMPLETE;\r\n\r\n    constructor(public payload: PeriodList) { }\r\n}\r\n\r\nexport class SaveAction implements Action {\r\n    type = ADD;\r\n\r\n    constructor(public payload: AddPeriod) { }\r\n}\r\n\r\nexport class SaveCompleteAction implements Action {\r\n    type = ADD_COMPLETE;\r\n\r\n    constructor(public payload: any[]) { }\r\n}\r\n\r\nexport class ChangeStatusAction implements Action {\r\n    type = CHANGE_STATUS;\r\n    constructor(public payload: ChangeStatus) { }\r\n}\r\n\r\nexport class ChangeStatusCompleteAction implements Action {\r\n    type = CHANGE_STATUS_COMPLETE;\r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class DeleteAction implements Action {\r\n    type = DELETE;\r\n    constructor(public payload: DeletePeriodModel) { }\r\n}\r\n\r\nexport type Actions = GetAction\r\n    | GetCompleteAction\r\n    | SaveAction\r\n    | SaveCompleteAction\r\n    | ChangeStatusAction\r\n    | ChangeStatusCompleteAction\r\n    | DeleteAction;\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/actions/period.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { PeriodListComponent } from './period-list/period-list';\r\nimport { DateTimePickerModule } from 'ngx-datetime-picker';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { HttpLoaderFactory } from '../../services/HttpLoaderFactory';\r\n\r\n\r\n\r\nexport const COMPONENTS = [\r\n    PeriodListComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        PaginationModule.forRoot(),\r\n        DateTimePickerModule,\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        RouterModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            }\r\n        })\r\n    ],\r\n    declarations: COMPONENTS,\r\n    exports: COMPONENTS,\r\n})\r\nexport class ComponentsModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/index.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8 push-md-2\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        {{ 'PeriodHeader' | translate }}\\r\\n      </div>\\r\\n      <div class=\\\"card-block\\\" *ngIf=\\\"isLoaded\\\">\\r\\n        <div class=\\\"form-group float-right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addmodal\\\">\\r\\n            {{ 'AddPeriod' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <table class=\\\"table table-hover table-outline mb-0 hidden-sm-down\\\" *ngIf=\\\"isLoaded\\\">\\r\\n            <thead class=\\\"thead-default\\\">\\r\\n              <tr>\\r\\n                <td class=\\\"text-center\\\">{{ 'PeriodStartDate' | translate }} <a [ngClass]=\\\"getArrowClass('PeriodStart')\\\" (click)=\\\"order.emit('PeriodStart')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">{{ 'PeriodEndDate' | translate }} <a [ngClass]=\\\"getArrowClass('PeriodEnd')\\\" (click)=\\\"order.emit('PeriodEnd')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">{{ 'Reminder1Date' | translate }} <a [ngClass]=\\\"getArrowClass('Reminder1Date')\\\" (click)=\\\"order.emit('Reminder1Date')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">{{ 'Reminder2Date' | translate }} <a [ngClass]=\\\"getArrowClass('Reminder2Date')\\\" (click)=\\\"order.emit('Reminder2Date')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">{{ 'PeriodStatus' | translate }} <a [ngClass]=\\\"getArrowClass('LockStatusId')\\\" (click)=\\\"order.emit('LockStatusId')\\\"></a></td>\\r\\n                <td class=\\\"text-center\\\">{{ 'Action' | translate }} </td>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let period of periods\\\">\\r\\n                <td class=\\\"text-center\\\">{{period.PeriodStart | date: 'dd-MMM-yy'}}</td>\\r\\n                <td class=\\\"text-center\\\">{{period.PeriodEnd | date: 'dd-MMM-yy'}}</td>\\r\\n                <td class=\\\"text-center\\\">{{period.Reminder1 | date: 'dd-MMM-yy'}}</td>\\r\\n                <td class=\\\"text-center\\\">{{period.Reminder2 | date: 'dd-MMM-yy'}}</td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"period.Status == 'Locked'\\\"><span class=\\\"badge badge-danger timego-status\\\">{{period.Status}}</span></td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"period.Status == 'Unlocked'\\\"><span class=\\\"badge badge-success timego-status\\\">{{period.Status}}</span></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <button type=\\\"button\\\" *ngIf=\\\"period.Status == 'Unlocked'\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"changeStatusAction({id: period.Id, status: 'Locked'})\\\">{{ 'Lock' | translate }}</button>\\r\\n                  <button type=\\\"button\\\" *ngIf=\\\"period.Status == 'Locked'\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"changeStatusAction({id: period.Id, status: 'Unlocked'})\\\">{{ 'Unlock' | translate }}</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"deleteId = period.Id\\\">{{ 'Delete' | translate }}</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <pagination [totalItems]=\\\"pagingModel.count\\\" [(ngModel)]=\\\"pagingModel.page\\\" (pageChanged)=\\\"changePage.emit({\\r\\n            orderBy: pagingModel.orderBy,\\r\\n            page: $event.page,\\r\\n            pageSize: pagingModel.pageSize,\\r\\n            IsAscending: !pagingModel.IsAscending,\\r\\n            count: pagingModel.count,\\r\\n            IsOrder: false})\\\"></pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"addmodal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Add period\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header timego-modal\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{ 'AddPeriod' | translate }}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body timego-modal\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"company-name\\\">{{ 'Startdate' | translate }}</label>\\r\\n          <div class=\\\"input-group mb-3 required\\\">\\r\\n            <span class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"icon-calendar\\\"></i>\\r\\n            </span>\\r\\n            <ngx-date-picker [(selectedDate)]=\\\"addPeriod.StartDate\\\"></ngx-date-picker>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"company-name\\\">{{ 'Reminder1Date' | translate }}</label>\\r\\n          <div class=\\\"input-group mb-3 required\\\">\\r\\n            <span class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"icon-calendar\\\"></i>\\r\\n            </span>\\r\\n            <ngx-date-picker [(selectedDate)]=\\\"addPeriod.Reminder1\\\"></ngx-date-picker>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"company-name\\\">{{ 'Reminder2Date' | translate }}</label>\\r\\n          <div class=\\\"input-group mb-3 required\\\">\\r\\n            <span class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"icon-calendar\\\"></i>\\r\\n            </span>\\r\\n            <ngx-date-picker [(selectedDate)]=\\\"addPeriod.Reminder2\\\"></ngx-date-picker>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">{{ 'Close' | translate }}</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"addPeriodAction(addPeriod)\\\">{{ 'Add' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete period\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header timego-modal\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{ 'Delete' | translate }} {{ 'Period' | translate }}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body timego-modal\\\">\\r\\n        <h6>{{ 'DeleteMessage' | translate }} {{ 'Period' | translate }}?</h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">{{ 'No' | translate }}</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"delete.emit({id: deleteId, paging: pagingModel})\\\">{{ 'Yes' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/period-list/period-list.html\n// module id = ../../../../../src/app/periods/components/period-list/period-list.html\n// module chunks = period.module","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PeriodListItem } from '../../models/period-list-item.model';\r\nimport { AddPeriod } from '../../models/add-period.model';\r\nimport { PeriodListPagingModel } from '../../models/period-list-paging.model';\r\nimport { ChangeStatus } from '../../models/chagne-status-period.model'\r\nimport { DeletePeriodModel } from '../../models/delete.model'\r\nimport { DatePipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\ndeclare var commonServerData: any;\r\n\r\n@Component({\r\n    selector: 'up-period-list',\r\n    templateUrl: './period-list.html',\r\n    styleUrls: ['./period.scss']\r\n\r\n})\r\nexport class PeriodListComponent {\r\n    @Input() periods: PeriodListItem[];\r\n    @Input() isLoaded: boolean = false;\r\n    @Input() loading: boolean = false;\r\n    @Input() pagingModel: PeriodListPagingModel;\r\n    @Output() order = new EventEmitter<string>();\r\n    @Output() add = new EventEmitter<AddPeriod>();\r\n    @Output() changeStatus = new EventEmitter<ChangeStatus>();\r\n    @Output() changePage = new EventEmitter<PeriodListPagingModel>();\r\n    @Output() delete = new EventEmitter<DeletePeriodModel>();\r\n\r\n    role: string;\r\n    deleteId: number;\r\n\r\n    addPeriod: AddPeriod = {\r\n        Reminder1: new Date(),\r\n        Reminder2: new Date(),\r\n        StartDate: new Date()\r\n    };\n\n\r\n\r\n    constructor(private translate: TranslateService) {\r\n        translate.addLangs([\"en\", \"fr\"]);\r\n        translate.setDefaultLang('en');\r\n    }\r\n\n    getArrowClass(field: string): string {\n        if (field != this.pagingModel.orderBy)\n            return \"fa fa-sort\";\n        if (this.pagingModel.IsAscending)\n            return \"fa fa-sort-asc\";\n        return \"fa fa-sort-desc\";\n    }\r\n\r\n    ngOnInit() {\r\n        this.role = commonServerData.Role;\r\n    }\r\n\r\n    addPeriodAction(model: AddPeriod) {\r\n        this.add.emit(model);\r\n        this.changePage.emit(this.pagingModel);\r\n    }\r\n\r\n    changeStatusAction(model: ChangeStatus) {\r\n        this.changeStatus.emit(model);\r\n        this.changePage.emit(this.pagingModel);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/period-list/period-list.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/components/period-list/period.scss\n// module id = ../../../../../src/app/periods/components/period-list/period.scss\n// module chunks = period.module","import 'rxjs/add/operator/take';\r\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport * as fromPeriod from '../reducers';\r\nimport * as periodActions from '../actions/period';\r\n\r\nimport { PeriodListPagingModel } from '../models/period-list-paging.model';\r\nimport { PeriodListItem } from '../models/period-list-item.model';\r\nimport { AddPeriod } from '../models/add-period.model';\r\nimport { ChangeStatus } from '../models/chagne-status-period.model'\r\nimport { DeletePeriodModel } from '../models/delete.model'\r\n\r\n@Component({\r\n    selector: 'period-page',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n    <up-period-list [periods]=\"periods$ | async\" [isLoaded]=\"isLoaded$ | async\" [pagingModel]=\"pagingModel$ | async\" [loading]=\"loading$ | async\" (order)=\"orderPeriods($event)\" (add)=\"addPeriod($event)\" (delete)=\"delete($event)\" (changeStatus)=\"changeStatus($event)\" (changePage)=\"changePage($event)\"></up-period-list>\r\n  `,\r\n})\r\nexport class PeriodPageComponent {\r\n    periods$: Observable<PeriodListItem[]>;\r\n    isLoaded$: Observable<boolean>;\r\n    loading$: Observable<boolean>;\r\n    pagingModel$: Observable<PeriodListPagingModel>;\r\n\r\n    constructor(private store: Store<fromPeriod.State>) {\r\n        this.periods$ = store.select(fromPeriod.getPeriods);\r\n        this.isLoaded$ = store.select(fromPeriod.getIsLoadedStatus);\r\n        this.loading$ = store.select(fromPeriod.getLoadingStatus);\r\n        this.pagingModel$ = store.select(fromPeriod.getPagingModel);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        let pagingModelView: PeriodListPagingModel = {\r\n            orderBy: \"id\",\r\n            page: 1,\r\n            pageSize: 10,\r\n            IsAscending: true,\r\n            count: 10,\r\n            IsOrder: true\r\n        }\r\n        this.store.dispatch(new periodActions.GetAction(pagingModelView));\r\n    }\r\n\r\n    orderPeriods(orderBy: string) {\r\n        let pagingModelView: PeriodListPagingModel = {\r\n            orderBy: orderBy,\r\n            page: 1,\r\n            pageSize: 10,\r\n            IsAscending: true,\r\n            count: 10,\r\n            IsOrder: true\r\n        }\r\n        this.store.dispatch(new periodActions.GetAction(pagingModelView));\r\n    }\r\n\r\n    addPeriod(model: AddPeriod) {\r\n        this.store.dispatch(new periodActions.SaveAction(model));\r\n    }\r\n\r\n    changeStatus(model: ChangeStatus)\r\n    {\r\n        this.store.dispatch(new periodActions.ChangeStatusAction(model));\r\n    }\r\n\r\n    changePage(model: PeriodListPagingModel)\r\n    {\r\n        this.store.dispatch(new periodActions.GetAction(model));\r\n    }\r\n\r\n    delete(model: DeletePeriodModel)\r\n    {\r\n        this.store.dispatch(new periodActions.DeleteAction(model));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/containers/period-page.ts","import 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/skip';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { Injectable, InjectionToken, Optional, Inject } from '@angular/core';\r\nimport { Effect, Actions, toPayload } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { async } from 'rxjs/scheduler/async';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { PeriodService } from '../period.service';\r\nimport * as periodActions from '../actions/period';\r\nimport { PeriodList } from '../models/period-list.model'\r\nimport { PeriodListPagingModel } from '../models/period-list-paging.model'\r\nimport { AddPeriod } from '../models/add-period.model';\r\nimport { ChangeStatus } from '../models/chagne-status-period.model'\r\nimport { DeletePeriodModel } from '../models/delete.model'\r\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\r\n\r\n@Injectable()\r\nexport class PeriodEffects {\n\n    pagingModel: PeriodListPagingModel;\n\r\n    @Effect()\r\n    get$: Observable<Action> = this.actions$\r\n        .ofType(periodActions.GET)\r\n        .map(toPayload)\r\n        .switchMap((query: PeriodListPagingModel) => {\r\n            const nextGet$ = this.actions$.ofType(periodActions.GET).skip(1);\n            this.pagingModel = query;\r\n            return this.periodService\r\n                .getPeriodList(query)\r\n                .takeUntil(nextGet$)\r\n                .map((users: PeriodList) => new periodActions.GetCompleteAction(users))\r\n                .catch(() => of(new periodActions.GetCompleteAction(null)));\r\n        });\r\n\r\n    @Effect()\r\n    save$: Observable<Action> = this.actions$\r\n        .ofType(periodActions.ADD)\r\n        .map(toPayload)\r\n        .switchMap((query: AddPeriod) => {\r\n            const nextGet$ = this.actions$.ofType(periodActions.ADD).skip(1);\r\n            return this.periodService\r\n                .addPeriod(query)\r\n                .takeUntil(nextGet$)\r\n                .map((result: any) => {\r\n                    this.toasterService.pop('success', 'Success', 'Success Add Period');\r\n                    return new periodActions.SaveCompleteAction(result);\r\n                })\r\n                .catch(() => of(new periodActions.SaveCompleteAction(null)));\r\n        });\r\n\r\n    @Effect()\r\n    change$: Observable<Action> = this.actions$\r\n        .ofType(periodActions.CHANGE_STATUS)\r\n        .map(toPayload)\r\n        .switchMap((model: ChangeStatus) => {\r\n            const nextGet$ = this.actions$.ofType(periodActions.CHANGE_STATUS).skip(1);\r\n            return this.periodService\r\n                .changeStatus(model)\r\n                .takeUntil(nextGet$)\r\n                .map((result: any) => {\r\n                    this.toasterService.pop('success', 'Success', 'Success Change Status To ' + model.status);\r\n                    return new periodActions.ChangeStatusCompleteAction(result);\r\n                })\r\n                .catch(() => of(new periodActions.ChangeStatusCompleteAction(null)));\r\n        });\r\n\r\n    @Effect()\r\n    delete$: Observable<Action> = this.actions$\r\n        .ofType(periodActions.DELETE)\r\n        .map(toPayload)\r\n        .switchMap((model: DeletePeriodModel) => {\r\n            const nextGet$ = this.actions$.ofType(periodActions.GET);\r\n            return this.periodService\r\n                .delete(model.id)\r\n                .takeUntil(nextGet$)\r\n                .map((result: any) => {\r\n                    this.toasterService.pop('success', 'Success', 'Success Delete Period');\r\n                    return new periodActions.GetAction(model.paging);\r\n                })\r\n                .catch(() => of(new periodActions.SaveCompleteAction(null)));\r\n        });\n\n    @Effect()\r\n    update$: Observable<Action> = this.actions$\r\n        .ofType(periodActions.CHANGE_STATUS_COMPLETE, periodActions.ADD_COMPLETE)\r\n        .map(toPayload)\r\n        .switchMap((model: any) => {\r\n            const nextGet$ = this.actions$.ofType(periodActions.GET_COMPLETE);\r\n            return this.periodService\r\n                .getPeriodList(this.pagingModel)\r\n                .takeUntil(nextGet$)\r\n                .map((users: PeriodList) => new periodActions.GetCompleteAction(users))\r\n                .catch(() => of(new periodActions.GetCompleteAction(null)));\r\n        });\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private periodService: PeriodService,\r\n        private toasterService: ToasterService \r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/effects/period.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PeriodPageComponent } from './containers/period-page';\r\nimport { AlwaysAuthGuard } from '../AlwaysAuthGuard' \r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PeriodPageComponent,\r\n        canActivate: [AlwaysAuthGuard],\r\n        data: {\r\n            title: 'Period'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PeriodRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/period-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { PeriodRoutingModule } from './period-routing.module';\r\nimport { PeriodService } from './period.service';\r\nimport { PeriodPageComponent } from './containers/period-page';\r\nimport { PeriodEffects } from './effects/period';\r\nimport { ComponentsModule } from './components/index'\r\nimport { reducers } from './reducers';\r\n\r\n@NgModule({\r\n    imports: [\r\n        HttpModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        PeriodRoutingModule,\r\n        ComponentsModule,\r\n        StoreModule.forFeature('periodPage', reducers),\r\n        EffectsModule.forFeature([PeriodEffects])\r\n    ],\r\n    declarations: [\r\n        PeriodPageComponent\r\n    ],\r\n    providers: [PeriodService]\r\n})\r\nexport class PeriodModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/period.module.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { PeriodListPagingModel } from './models/period-list-paging.model'\r\nimport { PeriodList } from './models/period-list.model'\r\nimport { AddPeriod } from './models/add-period.model'\r\nimport { ChangeStatus } from './models/chagne-status-period.model'\r\nimport { RequestService } from '../services/RequestService'\r\n\r\n@Injectable()\r\nexport class PeriodService {\r\n    constructor(private requestService: RequestService) { }\r\n\r\n    getPeriodList(pagingModel: PeriodListPagingModel): Observable<PeriodList> {\r\n        return this.requestService.post<PeriodList>(\"/api/periodPage/\", pagingModel);\r\n    }\r\n\r\n    addPeriod(addModel: AddPeriod): Observable<any> {\r\n        return this.requestService.post<any>(\"/api/AddPeriod/\", addModel);\r\n    }\r\n\r\n    changeStatus(changeStatus: ChangeStatus): Observable<any> {\r\n        return this.requestService.post<any>(\"/api/ChangePeriodStatus/\", changeStatus);\r\n    }\r\n\r\n    delete(id: number): Observable<any> {\r\n        return this.requestService.get<any>(\"/api/deleteperiod?id=\"+id);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/period.service.ts","import {\r\nActionReducerMap,\r\ncreateSelector,\r\ncreateFeatureSelector,\r\ncompose,\r\nActionReducer,\r\ncombineReducers,\r\nAction,\r\nActionReducerFactory,\r\nMemoizedSelector,\r\n} from '@ngrx/store';\r\n\r\nimport * as fromPeriod from './period';\r\n\r\nexport interface PeriodState {\r\n    periodPage: fromPeriod.State;\r\n}\r\n\r\nexport interface State extends fromPeriod.State {\r\n    'periodPage': PeriodState;\r\n}\r\n\r\nexport const reducers = {\r\n    periodPage: fromPeriod.reducer\r\n};\r\n\r\nexport const getPeriodState = createFeatureSelector<PeriodState>('periodPage');\r\nexport const getPeriodEntityState = createSelector(\r\n    getPeriodState,\r\n    (state: PeriodState) => state.periodPage\r\n);\r\nexport const getPeriods = createSelector(\r\n    getPeriodEntityState,\r\n    fromPeriod.getPeriods\r\n);\r\nexport const getLoadingStatus = createSelector(\r\n    getPeriodEntityState,\r\n    fromPeriod.getLoadingStatus\r\n);\r\nexport const getIsLoadedStatus = createSelector(\r\n    getPeriodEntityState,\r\n    fromPeriod.getIsLoadedStatus\r\n);\r\nexport const getPagingModel = createSelector(\r\n    getPeriodEntityState,\r\n    fromPeriod.getPagingModel\r\n);\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/reducers/index.ts","import { createSelector } from '@ngrx/store';\r\nimport { PeriodList } from '../models/period-list.model'\r\nimport { PeriodListItem } from '../models/period-list-item.model'\r\nimport * as periodActions from '../actions/period';\r\nimport { PeriodListPagingModel } from \"../models/period-list-paging.model\";\r\n\r\nexport interface State {\r\n    periods: PeriodListItem[];\r\n    isLoaded: boolean;\r\n    loading: boolean;\r\n    pagingModel: PeriodListPagingModel;\r\n}\r\n\r\nexport const initialState: State = {\r\n    periods: [],\r\n    isLoaded: false,\r\n    loading: false,\r\n    pagingModel: {\r\n        orderBy: \"id\",\r\n        page: 1,\r\n        pageSize: 10,\r\n        IsAscending: true,\r\n        count: 10,\r\n        IsOrder: true\r\n    }\r\n};\r\n\r\nexport function reducer(\r\n    state = initialState,\r\n    action: periodActions.Actions\r\n): State {\r\n    switch (action.type) {\r\n        case periodActions.GET:\r\n            const pagingModel = action.payload as PeriodListPagingModel;\r\n            pagingModel.IsAscending = !pagingModel.IsOrder ? state.pagingModel.IsAscending : pagingModel != null && pagingModel.orderBy != \"id\" ? pagingModel.orderBy != state.pagingModel.orderBy || !state.pagingModel.IsAscending : true;\r\n            {\r\n                return {\r\n                    periods: state.periods,\r\n                    isLoaded: true,\r\n                    loading: true,\r\n                    pagingModel: pagingModel,\r\n                };\r\n            }\r\n\r\n        case periodActions.GET_COMPLETE: {\r\n            const loadedPeriods = action.payload as PeriodList;\r\n            return {\r\n                periods: loadedPeriods.Results,\r\n                isLoaded: true,\r\n                loading: false,\r\n                pagingModel: {\r\n                    IsAscending: state.pagingModel.IsAscending,\r\n                    count: loadedPeriods.Count,\r\n                    orderBy: state.pagingModel.orderBy,\r\n                    page: state.pagingModel.page,\r\n                    pageSize: state.pagingModel.pageSize,\r\n                    IsOrder: true\r\n                }\r\n            };\r\n        }\r\n\r\n        case periodActions.ADD:\r\n            {\r\n                return {\r\n                    periods: state.periods,\r\n                    isLoaded: true,\r\n                    loading: true,\r\n                    pagingModel: state.pagingModel,\r\n                };\r\n            }\r\n\r\n        case periodActions.ADD_COMPLETE: {\r\n            return {\r\n                periods: state.periods,\r\n                isLoaded: true,\r\n                loading: false,\r\n                pagingModel: state.pagingModel\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPeriods = (state: State) => state.periods;\r\nexport const getLoadingStatus = (state: State) => state.loading;\r\nexport const getIsLoadedStatus = (state: State) => state.isLoaded;\r\nexport const getPagingModel = (state: State) => state.pagingModel;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/TimeGo/src/TimeGo.Web.Mvc/TimeGo/src/app/periods/reducers/period.ts"],"sourceRoot":"webpack:///"}