@using TimeGo.Models
@model AdminCodesViewModel
@{
    ViewBag.Title = "Manage Tasks";
}

<style>
    .date {width: 70px;}

    .single-line input, .single-line button {
        display: inline-block
    }

    .single-line button { width: auto;}
</style>

<h1>@Model.CompanyName</h1>

<h3>ADMIN - Manage Tasks</h3>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th width="50"></th>
            <th style="width: 20%">Task</th>
            <th style="width: 20%">Approver 1</th>
            <th>Approver 2</th>
            <th>Is Active</th>
        </tr>
    </thead>
    @foreach (var task in Model.Tasks) {
        <tr>
            <td>
                <a href='@Url.Action("AdminCodes", "Admin", new { TaskId=task.TaskId })'>
                    <span class="glyphicon glyphicon-cog"></span>
                </a>
            </td>
            <td>@task.TaskName</td>
            <td>
                @if (task.Employee != null) {
                    @String.Format("{1}, {0}", @task.Employee.FirstName, @task.Employee.LastName);
                }
            </td>
            <td>
                @if (task.Employee1 != null) {
                    @String.Format("{1}, {0}", @task.Employee1.FirstName, @task.Employee1.LastName);
                }
            </td>
            <td>@(task.IsActive==1?"Yes":"No")</td>
        </tr>
    }
</table>

<br />
@if (Model.SelectedTask.TaskId == 0) {
    <h3>Add New</h3>
} else {
    <h3>Edit Task</h3>
}


@using (Html.BeginForm("AdminCodes", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
    @Html.HiddenFor(m => m.SelectedTask.TaskId)
    <div class="form-group">
        <label for="exampleInputEmail1" class="col-sm-2">Task Name</label>
        @Html.TextBoxFor(m => m.SelectedTask.TaskName, new { Class = "form-control" })
        @Html.ValidationMessageFor(m => m.SelectedTask.TaskName, "", new { @class = "text-danger col-xs-7" })
    </div>
    <div class="form-group">
        <label for="exampleInputEmail1" class="col-sm-2">Approver 1</label>
        @Html.DropDownListFor(m => m.SelectedTask.Approver1Id, Model.Employees, new { Class = "form-control" })
    </div>
    <div class="form-group">
        <label for="exampleInputEmail1" class="col-sm-2">Approver 2</label>
        @Html.DropDownListFor(m => m.SelectedTask.Approver2Id, Model.Employees, new { Class = "form-control" })
     </div>

    <div class="form-group">
        <label for="exampleInputEmail1" class="col-sm-2">Is Active</label>
        <div>
            <label class="radio-inline">
                @Html.RadioButtonFor(m => m.SelectedTask.IsActive, 1) Yes
            </label>

            <label class="radio-inline">
                @Html.RadioButtonFor(m => m.SelectedTask.IsActive, 0) No
            </label>
        </div>
    </div>

    <div class="form-group">
        @Html.ValidationMessageFor(m => m.SelectedTask.IsActive, "", new { @class = "text-danger col-xs-7" })
    </div>

    <div class="form-group">
        <input type="submit" class="btn btn-primary" value="Save" />    <input type="button" value="Cancel" class="btn btn-default" onclick="location.href='@Url.Action("AdminCodes", "Admin")'" />
    </div>
}



        @section scripts{
            <script>
                $(function () {
                    $(".date").datepicker({
                        showOtherMonths: true,
                        selectOtherMonths: true
                    });
                });
            </script>

            @Scripts.Render("~/bundles/jqueryval")
        }
