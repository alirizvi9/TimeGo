@using TimeGo.Models
@model TimesheetViewModel
@{
    ViewBag.Title = "Timesheets";
}

<style>
    .work-day {
        padding: 0px 10px 10px 10px;
    }

    .work-day .add-hours{
        
    }

    .work-day h4 {
        font-weight: bold;        
    }

    .work-day:nth-child(even) {background: #CCC} 
</style>

<h1>@Model.CompanyName</h1>


@using (Html.BeginForm("time", Model.CompanyURL, FormMethod.Post, new { @class = "form-horizontal", role = "form" })) 
{
    <div class="row form-group">
        <div class="col-xs-8">
            @Html.DropDownListFor(m => m.SelectedPeriodId, Model.PeriodListItems, new { @Class = "form-control SelectedPeriodId" })
        </div>

        <div class="col-xs-4">
            <p class="form-control-static grandtotal text-right" style="font-weight: bold; color: blue; font-size: 12pt;"></p>
        </div>
    </div>




    foreach (var dt in Model.SelectedPeriodDates) {
        <div class="work-day">
            <div class="row">
                <div class="col-xs-12">
                    <h4>@dt.ToString("dddd, MMMM d")</h4>
                </div>
            </div>

            <input type="hidden" value="@dt.ToString("MM/dd/yyyy")" class="work-day-date"/>

            <div class="reported-hours"></div>

            <div class="row">
                <div class="col-xs-12">
                    <button class="add-hours"><span class="glyphicon glyphicon-plus"></span></button> Add another line for @dt.ToString("dddd, MMMM d")
                </div>
            </div>
        </div>
    }

    <div class="row form-group">
        <div class="col-xs-12">
            <p class="form-control-static grandtotal text-right" style="font-weight: bold; color: blue; font-size: 12pt;"></p>
        </div>
    </div>

        <div class="row">
            <div class="form-group">
                <label for="exampleInputEmail1" class="col-sm-2">Notes to payroll</label>
                <div class="col-sm-10">
                    @Html.TextAreaFor(m=>m.EmployeeNotes, new { @class="form-control", rows="2", style="max-width: 100%" })
                </div>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="form-group">
                <div class="col-sm-2">
                    <button type="submit" class="form-control save btn btn-primary"  @((Model.IsLocked) ? "disabled" : "") >Save</button>
                </div>

                <div class="col-sm-2">
                    <button class="form-control submit btn btn-primary" @((Model.IsLocked) ? "disabled" : "")>Submit Final</button>
                </div>

                <div class="col-sm-6">
                    @if (Model.LastSubmitted != null) {
                        <p class="form-control-static">Submitted on  @Model.LastSubmitted</p>
                    }
                </div>

                <div class="col-sm-2">
                    <button class="form-control Unlock btn btn-primary" @((!Model.IsLocked) ? "disabled" : "")>Request to Unlock</button>
                </div>
            </div>
        </div>

    @Html.HiddenFor(m=>m.TimesheetData, new {id="TimesheetDetails" })
    @Html.HiddenFor(m => m.IsSave, new { @class = "IsSave" })
    @Html.HiddenFor(m => m.IsSubmit, new { @class = "IsSubmit" })
    @Html.HiddenFor(m => m.IsLocked, new { @class = "IsLocked" })
}


<div id="time-template" class="row hidden" >
    <div class="row day" style="margin-bottom: 1px; margin-top: 0px; padding-bottom: 1px;">
        <div class="col-xs-5">
            <div class="pull-right">
                <input type="hidden" class="LineId" />
                <select style="width: auto; display: inline-block" class="form-control start-hour">
                    <option value="00">12 am</option>
                    <option value="01">1 am</option>
                    <option value="02">2 am</option>
                    <option value="03">3 am</option>
                    <option value="04">4 am</option>
                    <option value="05">5 am</option>
                    <option value="06">6 am</option>
                    <option value="07">7 am</option>
                    <option value="08" selected="selected">8 am</option>
                    <option value="09">9 am</option>
                    <option value="10">10 am</option>
                    <option value="11">11 am</option>
                    <option value="12">12 pm</option>
                    <option value="13">1 pm</option>
                    <option value="14">2 pm</option>
                    <option value="15">3 pm</option>
                    <option value="16">4 pm</option>
                    <option value="17">5 pm</option>
                    <option value="18">6 pm</option>
                    <option value="19">7 pm</option>
                    <option value="20">8 pm</option>
                    <option value="21">9 pm</option>
                    <option value="22">10 pm</option>
                    <option value="23">11 pm</option>
                </select>

                <select style="width: auto; display: inline-block" class="form-control start-minute">
                    <option value="00">:00</option>
                    <option value="15">:15</option>
                    <option value="30">:30</option>
                    <option value="45">:45</option>
                </select>

                <span style="padding-left: 10px;padding-right: 10px;">to</span>

                <select style="width: auto; display: inline-block" class="form-control end-hour">
                    <option value="00">12 am</option>
                    <option value="01">1 am</option>
                    <option value="02">2 am</option>
                    <option value="03">3 am</option>
                    <option value="04">4 am</option>
                    <option value="05">5 am</option>
                    <option value="06">6 am</option>
                    <option value="07">7 am</option>
                    <option value="08" selected="selected">8 am</option>
                    <option value="09">9 am</option>
                    <option value="10">10 am</option>
                    <option value="11">11 am</option>
                    <option value="12">12 pm</option>
                    <option value="13">1 pm</option>
                    <option value="14">2 pm</option>
                    <option value="15">3 pm</option>
                    <option value="16">4 pm</option>
                    <option value="17">5 pm</option>
                    <option value="18">6 pm</option>
                    <option value="19">7 pm</option>
                    <option value="20">8 pm</option>
                    <option value="21">9 pm</option>
                    <option value="22">10 pm</option>
                    <option value="23">11 pm</option>
                </select>

                <select style="width: auto; display: inline-block" class="form-control end-minute">
                    <option value="00">:00</option>
                    <option value="15">:15</option>
                    <option value="30">:30</option>
                    <option value="45">:45</option>
                </select>

            </div>
        </div>

        <div class="col-xs-4">
            @Html.DropDownListFor(m => m.SelectedPeriodId, Model.TaskListItems, new { @Class = "form-control task" })
        </div>
        
        <div class="col-xs-1">
            <p class="form-control-static lines-total-hour text-right" style="font-weight: bold; color: blue; font-size: 12pt;"></p>
        </div>

        <div class="col-xs-1">
            <p class="form-control-static lines-total-minute text-left" style="font-weight: bold; color: blue; font-size: 12pt;"></p>
        </div>

        <div class="col-xs-1" style="padding-top: 7px;">
            <a href="#" style="color: red"><span class="glyphicon glyphicon-remove"></span></a>
        </div>
    </div>
</div>

@section scripts{
<script>
    function reportedHours_OnChange() {
        isValid = true;
        var grandtotal = 0;

        $(".work-day .day").each(function (obj) {
            var row = $(this);

            var starttime = +row.find(".start-hour").val() + row.find(".start-minute").val() / 60
            var endtime = +row.find(".end-hour").val() + row.find(".end-minute").val() / 60
            var total = endtime - starttime;

            var task = +row.find(".task").val();

            if (total > 0 && task > 0) {
                row.find(".lines-total-hour").html(Math.floor(total) + "h")
                row.find(".lines-total-minute").html(((+total - Math.floor(total)) * 60) + "m")
                grandtotal += total;
            } else {
                row.find(".lines-total-hour").html("<span style='color: red'>INVALID</span>")
                row.find(".lines-total-minute").html("")
                isValid = false;
            }
        });

        if (isValid) {
            $(".grandtotal").html("Total time: " + Math.floor(grandtotal) + "h " + ((+grandtotal - Math.floor(grandtotal)) * 60) + "m")
            $('.save').prop('disabled', false);
        } else {
            $(".grandtotal").html("Total time: <span style='color: red'>INVALID</span>")
            $('.save').prop('disabled', true);
        }
    }



    function addTimesheetLine(WorkDayDiv, LineId, StartDate, EndDate, TaskId) {
        var taskdiv = WorkDayDiv.children(".reported-hours");
        var template = $("#time-template").html();

        taskdiv.append(template);

        if (LineId != 0) {
            WorkDayDiv.find(".day:last").find(".LineId").val(LineId)
        }

        if (TaskId != 0) {
            WorkDayDiv.find(".day:last").find(".task").val(TaskId)
        }

        if (StartDate != "") {
            WorkDayDiv.find(".day:last").find(".start-hour").val(StartDate.substring(11, 13))
            WorkDayDiv.find(".day:last").find(".start-minute").val(StartDate.substring(14, 16))
        }

        if (EndDate != "") {
            WorkDayDiv.find(".day:last").find(".end-hour").val(EndDate.substring(11, 13))
            WorkDayDiv.find(".day:last").find(".end-minute").val(EndDate.substring(14, 16))
        }
    }



    function saveTimesheet() {
        var timesheetData = "";

        $(".work-day .day").each(function () {
            var obj = $(this);
            var dt = obj.parents(".work-day").find(".work-day-date ").val();

            timesheetData += obj.find(".LineId").val();
            timesheetData += "|";
            timesheetData += dt + " " + obj.find(".start-hour").val() + ":" + obj.find(".start-minute").val();
            timesheetData += "|";
            timesheetData += dt + " " + obj.find(".end-hour").val() + ":" + obj.find(".end-minute").val();
            timesheetData += "|";
            timesheetData += obj.find(".task").val();
            timesheetData += "\n";
        });

        $("#TimesheetDetails").val(timesheetData);
        $(".IsSave").val("True");
        $(".IsSubmit").val("False");
    }

    $(".save").on("click", saveTimesheet);



    $(".submit").on("click", function () {
        saveTimesheet();
        $(".IsSubmit").val("True");
    });



    $(function () {
        var timesheetData = $("#TimesheetDetails").val();
        var timesheeLines = timesheetData.split('\n');

        for (var i = 0; i < timesheeLines.length; i++) {
            if (timesheeLines[i] != "") {
                var LineDetails = timesheeLines[i].split("|");
                var parent = $(".work-day-date[value='" + LineDetails[1].substring(0, 10) + "']").parents(".work-day")
                addTimesheetLine(parent, LineDetails[0], LineDetails[1], LineDetails[2], LineDetails[3]);
            }
        }
        reportedHours_OnChange()

        if ($(".IsLocked").val() == "True") {
            $(".work-day select, .work-day button").each(function () {
                $(this).prop("disabled", "true");
            })

            $(".submit, .save").prop("disabled", "true");

        }
    });


    $(".reported-hours").on("change", reportedHours_OnChange)

    $(".SelectedPeriodId").on("change", function () {
        $(".IsSave").val("False");
        $(".IsSave").val("False");
        $("form").submit();
    });
    

    $(".add-hours").on("click", function (event) {
        event.stopPropagation();
        event.preventDefault();

        addTimesheetLine($(this).parents(".work-day"), 0, null, null, 0);

        reportedHours_OnChange();
    });

</script>
}
